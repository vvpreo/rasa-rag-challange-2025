{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Goodbye!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Goodbye!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Goodbye!", "original_user_utterance": "Goodbye!", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Farewell!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Goodbye!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Goodbye!", "original_user_utterance": "Goodbye!", "rephrased_user_utterance": "Farewell!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Farewell!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Farewell!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Farewell!", "original_user_utterance": "Farewell!", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Goodbye for now!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Farewell!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Farewell!", "original_user_utterance": "Farewell!", "rephrased_user_utterance": "Goodbye for now!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: See you later.\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"See you later.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: See you later.", "original_user_utterance": "See you later.", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Catch you later!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"See you later.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: See you later.", "original_user_utterance": "See you later.", "rephrased_user_utterance": "Catch you later!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Take care!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Take care!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Take care!", "original_user_utterance": "Take care!", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Wishing you all the best!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Take care!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Take care!", "original_user_utterance": "Take care!", "rephrased_user_utterance": "Wishing you all the best!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Bye for now.\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Bye for now.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Bye for now.", "original_user_utterance": "Bye for now.", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: I'll see you later!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Bye for now.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/bye.yml::BYE: Bye for now.", "original_user_utterance": "Bye for now.", "rephrased_user_utterance": "I'll see you later!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Goodbye!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Goodbye!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: Goodbye!", "original_user_utterance": "Goodbye!", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Farewell!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Goodbye!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: Goodbye!", "original_user_utterance": "Goodbye!", "rephrased_user_utterance": "Farewell!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: See you later.\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"See you later.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: See you later.", "original_user_utterance": "See you later.", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Catch you later!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"See you later.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: See you later.", "original_user_utterance": "See you later.", "rephrased_user_utterance": "Catch you later!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Take care!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Take care!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: Take care!", "original_user_utterance": "Take care!", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Wishing you all the best!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Take care!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: Take care!", "original_user_utterance": "Take care!", "rephrased_user_utterance": "Wishing you all the best!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Bye for now.\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Bye for now.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: Bye for now.", "original_user_utterance": "Bye for now.", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: I'll see you later!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Bye for now.\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/train.yaml::BYE: Bye for now.", "original_user_utterance": "Bye for now.", "rephrased_user_utterance": "I'll see you later!"}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Farewell!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Farewell!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/validation.yaml::BYE: Farewell!", "original_user_utterance": "Farewell!", "rephrased_user_utterance": null}
{"prompt": "# INSTRUCTIONS\nYou are dialogue conductor.\nYour ONLY goal is to analyze the current conversation context and generate a list of `actions` to:\n- start new business processes that we call `flows`\n- extract information provided by user to `slots`,\n- respond to small talk and knowledge requests\n## Additional info:\n- Study given document carefully before calling any action.\n- Any logic of what happens afterwards is handled by the flow engine.\n- Write out the actions you want to take, one per line, in the order they should take place.\n- Only use information provided by the user when filling a slot.\n- Do not fill slots with abstract values or placeholders. You have to rely on information in current document ONLY.\n- Don't be overconfident. Imagine you were a person reading this message and:\n    - Take a conservative approach and clarify before proceeding.\n    - Clarify if it's not 100% clear what user wants. Switch flows and set slots otherwise.\n    - If the user asks for two things which seem contradictory, clarify before calling system actions.\n    - If it's not clear whether the user wants to skip the step or to cancel the flow, cancel the flow.\n- Strictly adhere to the provided action types listed above.\n- @RA@ means something you, as an AI agent MUST pay attention to.\n\n---\n\n# Available Actions:\n* `start flow flow_id`: Starting a flow. For example, `start flow transfer_money` or `start flow list_contacts`.\n* `set slot slot_name slot_value`: Slot setting. For example, `set slot transfer_money_recipient Freddy`. Can be used to correct and change previously set values.\n* `cancel flow`: Cancelling the current flow.\n* `disambiguate flows flow_id1 flow_id2 ... flow_id_n`: Disambiguate which flow should be started when user input is ambiguous by listing the potential flows as options. For example, `disambiguate flows list_contacts add_contact remove_contact ...` if the user just wrote \"contacts\".\n* `provide info`: Responding to the user's questions by supplying relevant information, such as answering FAQs or explaining services.\n* `offtopic reply`: Responding to casual or social user messages that are unrelated to any flows, engaging in friendly conversation and addressing off-topic remarks.\n\n## General Tips\n* Do not fill slots with abstract values or placeholders.\n* For categorical slots try to match the user message with allowed slot values. Use \"other\" if you cannot match it.\n* Set the boolean slots based on the user response. Map positive responses to `True`, and negative to `False`.\n* Extract text slot values exactly as provided by the user. Avoid assumptions, format changes, or partial extractions.\n* Only use information provided by the user.\n* Use clarification in ambiguous cases.\n* Multiple flows can be started. If a user wants to digress into a second flow, you do not need to cancel the current flow.\n* Do not cancel the flow unless the user explicitly requests it.\n* Strictly adhere to the provided action format.\n* Focus on the last message and take it one step at a time.\n* Use the previous conversation steps only to aid understanding.\n\n-------------\n\n## Application's Flows and Slots\nUse the following structured data:\n```json\n[\n {\n  \"flow_id\": \"faq\",\n  \"description\": \"Call `faq` flow to respond all user's queries that look like a general question. Examples:\\n- USER: How to choose a motorcycle for beginners?\\n- USER: How to adjust ATV suspension for different terrain types?\\n- USER: What problems occur when using an electric scooter in the rain?\\n- USER: What navigation systems are suitable for ATVs?\\nFAQ db contains questions on topics: comfort, components, customization, documentation, electric, maintenance, navigation, off_road, performance, safety, seasonal, storage, technical, troubleshooting, vehicle_selection\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"vehicles_search_by_make_and_model\",\n  \"description\": \"Call 'vehicles_search_by_make_or_model' flow if:\\n- User asks to search info about particular make and/or model. Examples:\\n  - USER: How many HP has Yamaha R1?\\n  - USER: What is the seat height for AJP SPR 240X Enduro?\\n  - USER: Help me with specific model\\n  - USER: <Manufacturer> <model name>\\n  - USER: <model name> <Manufacturer>\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   },\n   {\n    \"name\": \"user_search_specs_make\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the manufacturer.\\n@RA@ Most common case is when user define <manufacturer> <model>. Try to infer model if possible. If not sure don't do it. Examples:\\n- USER: Yamaha R1. user_search_specs_make=Yamaha, user_search_specs_model=R1\\n- USER: Yamaha Einfield. Both are manufacturers - do not set any slots.\\n- USER: Yamaha YFZ 450. user_search_specs_make=Yamaha, user_search_specs_model=YFZ 450\\n\"\n   },\n   {\n    \"name\": \"user_search_specs_model\",\n    \"type\": \"text\",\n    \"description\": \"Get the name of the model from the list provided to user.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"other_search\",\n  \"description\": \"Call 'other_search' flow if:\\n- @RA@ User is asking to recommend particular brands or something else.\\n- User's intent looks like a search for moto accessories/equipment/other. Examples:\\n  - I need top 3 navigation systems for ATVs\\n  - Where I can tune my bike?\\n  - What shocks are suitable for Aprilia Tuareg 660?\\n  - Recommend me 3 driving schools in Madrid.\\n  - What are the best motorcycle gloves for winter riding?\\n  - Where can I find a motorcycle-friendly road trip planner?\\n  - What are the top-rated motorcycle covers for winter?\\n  - What are the best motorcycle safety vests?\\n  - What are the best motorcycle mirrors for visibility?\\n  - Where can I find motorcycle-specific insurance?\\n  - What are the best motorcycle horn upgrades?\\n  - Where can I find a motorcycle repair manual?\\n  - What are the best motorcycle rain covers?\\n  - What are the best motorcycle ramp options?\\n  - Recommend some comfortable motorcycle seats.\\n  - What are the best motorcycle tail light upgrades?\\n  - Suggest some effective motorcycle anti-fog solutions.\\n\",\n  \"slots\": [\n   {\n    \"name\": \"user_name\",\n    \"type\": \"text\",\n    \"description\": \"Name of the user. @RA@ Capitalize name slot if needed.\"\n   },\n   {\n    \"name\": \"user_gender\",\n    \"type\": \"categorical\",\n    \"description\": \"Gender of the user. @RA@ Try to infer gender from name if it is obvious.\",\n    \"allowed_values\": \"['male', 'female']\"\n   },\n   {\n    \"name\": \"user_age\",\n    \"type\": \"float\",\n    \"description\": \"Age of the user. @RA@ If user provides year of birth - keep asking for age.\"\n   },\n   {\n    \"name\": \"user_email\",\n    \"type\": \"text\",\n    \"description\": \"E-mail of the user. @RA@ e-mail MUST be PROVIDED in a form of `<alphanum|.>@<alphanum>.<alphanum>`.\"\n   }\n  ]\n },\n {\n  \"flow_id\": \"good_bye_user\",\n  \"description\": \"Call flow `good_bye_user` if user intents to finish conversation. Examples:\\n- Cheerio\\n- \u041f\u043e\u043a\u0430\\n- Adios\\n- Ciao\\n- Keep in touch\\n- I wish you well\\n- I'm ready to go\\n- Have a good one!\\n- I'm off to another adventure!\\n- Exit stage left!\\n\",\n  \"slots\": []\n }\n]\n```\n\n---\n\n# Current State\n\nYou are currently not inside any flow.\n\n---\n\n## Conversation History\n\nUSER: Goodbye for now!\n\n---\n\n## Task\nCreate an action list with one action per line in response to the user's last message: \"\"\"Farewell!\"\"\".\n\nYour action list:", "output": "start flow good_bye_user", "original_test_name": "./tests/e2e_finetune_try/output/4_train_test_split/e2e_tests/validation.yaml::BYE: Farewell!", "original_user_utterance": "Farewell!", "rephrased_user_utterance": "Goodbye for now!"}
